1666121149
waR3U4bTeM%3A96bb271b1c1e165827bfcf09d4961e80-7e309e5076a29a360e4703a88074b1dd
s:5776:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxMjp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrIjo3OntzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHN1bW1hcnkiO3M6Mzc6IkZpcmVkIHdoZW4gdGhlIHBsdWdpbiBpcyB1bmluc3RhbGxlZC4iO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6NzQyOiJXaGVuIHBvcHVsYXRpbmcgdGhpcyBmaWxlLCBjb25zaWRlciB0aGUgZm9sbG93aW5nIGZsb3cKb2YgY29udHJvbDoKCi0gVGhpcyBtZXRob2Qgc2hvdWxkIGJlIHN0YXRpYwotIENoZWNrIGlmIHRoZSAkX1JFUVVFU1QgY29udGVudCBhY3R1YWxseSBpcyB0aGUgcGx1Z2luIG5hbWUKLSBSdW4gYW4gYWRtaW4gcmVmZXJyZXIgY2hlY2sgdG8gbWFrZSBzdXJlIGl0IGdvZXMgdGhyb3VnaCBhdXRoZW50aWNhdGlvbgotIFZlcmlmeSB0aGUgb3V0cHV0IG9mICRfR0VUIG1ha2VzIHNlbnNlCi0gUmVwZWF0IHdpdGggb3RoZXIgdXNlciByb2xlcy4gQmVzdCBkaXJlY3RseSBieSB1c2luZyB0aGUgbGlua3MvcXVlcnkgc3RyaW5nIHBhcmFtZXRlcnMuCi0gUmVwZWF0IHRoaW5ncyBmb3IgbXVsdGlzaXRlLiBPbmNlIGZvciBhIHNpbmdsZSBzaXRlIGluIHRoZSBuZXR3b3JrLCBvbmNlIHNpdGV3aWRlLgoKVGhpcyBmaWxlIG1heSBiZSB1cGRhdGVkIG1vcmUgaW4gZnV0dXJlIHZlcnNpb24gb2YgdGhlIEJvaWxlcnBsYXRlOyBob3dldmVyLCB0aGlzIGlzIHRoZQpnZW5lcmFsIHNrZWxldG9uIGFuZCBvdXRsaW5lIGZvciBob3cgdGhlIGZpbGUgc2hvdWxkIHdvcmsuCgpGb3IgbW9yZSBpbmZvcm1hdGlvbiwgc2VlIHRoZSBmb2xsb3dpbmcgZGlzY3Vzc2lvbjoKaHR0cHM6Ly9naXRodWIuY29tL3RvbW1jZmFybGluL1dvcmRQcmVzcy1QbHVnaW4tQm9pbGVycGxhdGUvcHVsbC8xMjMjaXNzdWVjb21tZW50LTI4NTQxOTEzIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX1zOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHRhZ3MiO2E6Mzp7aTowO086NDM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXExpbmsiOjM6e3M6NzoiACoAbmFtZSI7czo0OiJsaW5rIjtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcTGluawBsaW5rIjtzOjMyOiJodHRwczovL2dpdGh1Yi5jb20vdG9tZW5nc2FuY2hleiI7czoxNDoiACoAZGVzY3JpcHRpb24iO047fWk6MTtPOjQ0OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xTaW5jZSI6Mzp7czo3OiIAKgBuYW1lIjtzOjU6InNpbmNlIjtzOjUzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcU2luY2UAdmVyc2lvbiI7czo1OiIxLjAuMCI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX19aToyO086NDY6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXEdlbmVyaWMiOjI6e3M6NzoiACoAbmFtZSI7czo3OiJwYWNrYWdlIjtzOjE0OiIAKgBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czoxMDoiR3JvdXBfQ2FyZSI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319fX1zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGNvbnRleHQiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0IjoyOntzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQAbmFtZXNwYWNlIjtzOjA6IiI7czo1NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0AG5hbWVzcGFjZUFsaWFzZXMiO2E6MDp7fX1zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGxvY2F0aW9uIjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZVN0YXJ0IjtiOjA7czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlRW5kIjtiOjA7fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaGFzaCI7czozMjoiN2UzMDllNTA3NmEyOWEzNjBlNDcwM2E4ODA3NGIxZGQiO3M6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbmFtZSI7czoxMzoidW5pbnN0YWxsLnBocCI7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBwYXRoIjtzOjEzOiJ1bmluc3RhbGwucGhwIjtzOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHNvdXJjZSI7czoxMDUzOiI8P3BocAoKLyoqCiAqIEZpcmVkIHdoZW4gdGhlIHBsdWdpbiBpcyB1bmluc3RhbGxlZC4KICoKICogV2hlbiBwb3B1bGF0aW5nIHRoaXMgZmlsZSwgY29uc2lkZXIgdGhlIGZvbGxvd2luZyBmbG93CiAqIG9mIGNvbnRyb2w6CiAqCiAqIC0gVGhpcyBtZXRob2Qgc2hvdWxkIGJlIHN0YXRpYwogKiAtIENoZWNrIGlmIHRoZSAkX1JFUVVFU1QgY29udGVudCBhY3R1YWxseSBpcyB0aGUgcGx1Z2luIG5hbWUKICogLSBSdW4gYW4gYWRtaW4gcmVmZXJyZXIgY2hlY2sgdG8gbWFrZSBzdXJlIGl0IGdvZXMgdGhyb3VnaCBhdXRoZW50aWNhdGlvbgogKiAtIFZlcmlmeSB0aGUgb3V0cHV0IG9mICRfR0VUIG1ha2VzIHNlbnNlCiAqIC0gUmVwZWF0IHdpdGggb3RoZXIgdXNlciByb2xlcy4gQmVzdCBkaXJlY3RseSBieSB1c2luZyB0aGUgbGlua3MvcXVlcnkgc3RyaW5nIHBhcmFtZXRlcnMuCiAqIC0gUmVwZWF0IHRoaW5ncyBmb3IgbXVsdGlzaXRlLiBPbmNlIGZvciBhIHNpbmdsZSBzaXRlIGluIHRoZSBuZXR3b3JrLCBvbmNlIHNpdGV3aWRlLgogKgogKiBUaGlzIGZpbGUgbWF5IGJlIHVwZGF0ZWQgbW9yZSBpbiBmdXR1cmUgdmVyc2lvbiBvZiB0aGUgQm9pbGVycGxhdGU7IGhvd2V2ZXIsIHRoaXMgaXMgdGhlCiAqIGdlbmVyYWwgc2tlbGV0b24gYW5kIG91dGxpbmUgZm9yIGhvdyB0aGUgZmlsZSBzaG91bGQgd29yay4KICoKICogRm9yIG1vcmUgaW5mb3JtYXRpb24sIHNlZSB0aGUgZm9sbG93aW5nIGRpc2N1c3Npb246CiAqIGh0dHBzOi8vZ2l0aHViLmNvbS90b21tY2Zhcmxpbi9Xb3JkUHJlc3MtUGx1Z2luLUJvaWxlcnBsYXRlL3B1bGwvMTIzI2lzc3VlY29tbWVudC0yODU0MTkxMwogKgogKiBAbGluayAgICAgICBodHRwczovL2dpdGh1Yi5jb20vdG9tZW5nc2FuY2hlegogKiBAc2luY2UgICAgICAxLjAuMAogKgogKiBAcGFja2FnZSAgICBHcm91cF9DYXJlCiAqLwoKLy8gSWYgdW5pbnN0YWxsIG5vdCBjYWxsZWQgZnJvbSBXb3JkUHJlc3MsIHRoZW4gZXhpdC4KaWYgKCAhIGRlZmluZWQoICdXUF9VTklOU1RBTExfUExVR0lOJyApICkgewoJZXhpdDsKfQoiO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbmFtZXNwYWNlcyI7YTowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbmNsdWRlcyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBmdW5jdGlvbnMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY29uc3RhbnRzIjthOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNsYXNzZXMiO2E6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW50ZXJmYWNlcyI7YTowOnt9czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQB0cmFpdHMiO2E6MDp7fX0=";